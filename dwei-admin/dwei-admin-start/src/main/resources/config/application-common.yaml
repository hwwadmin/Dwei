########################################
## 该配置文件为通用配置，一般无需修改
########################################
server:
  # HTTP设置
  servlet:
    encoding:
      enabled: true
      charset: UTF-8
      force: true
  max-http-request-header-size: 8192
  # 压缩配置
  compression:
    enabled: true
    mime-types: application/json,text/javascript,application/javascript,application/x-javascript,application/xml,text/html,text/xml,text/plain,image/jpeg,image/gif,image/x-icon
    min-response-size: 2048
  # tomcat配置
  tomcat:
    #当所有可能的请求处理线程都在使用时，传入连接请求的最大队列长度
    acceptCount: 200
    # tomcat线程池配置
    threads:
      max: 50
      min-spare: 20
    remoteip:
      remote-ip-header: X-FORWARDED-FOR
    uriEncoding: UTF-8
    # 自定义临时文件存放目录
    basedir: ./tmp/${spring.application.name}/tomcat_tmp
    accesslog:
      enabled: false
      directory: logs
      prefix: server
      buffered: true
      requestAttributesEnabled: false
      fileDateFormat: -yyyyMMdd

spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 20MB
      max-request-size: 20MB
  jackson:
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
  session:
    timeout: 1200S
    store-type: redis
  main:
    banner-mode: log
  output:
    ansi:
      enabled: DETECT
  # db
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driverClassName: com.mysql.cj.jdbc.Driver
    druid:
      # 初始连接数
      initialSize: 5
      # 最小连接池数量
      minIdle: 10
      # 最大连接池数量
      maxActive: 20
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置连接超时时间
      connectTimeout: 30000
      # 配置网络超时时间
      socketTimeout: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      maxEvictableIdleTimeMillis: 900000
      # 配置检测连接是否有效
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      webStatFilter:
        enabled: true
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: admin
        login-password: 123456
      filter:
        stat:
          enabled: true
          # 慢SQL记录
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: true
        wall:
          config:
            multi-statement-allow: true
  data:
    # redis
    redis:
      database: 0
      timeout: 3s

# 日志设置
logging:
  config: classpath:config/log/log4j2-dev.xml
  register-shutdown-hook: true
  level:
    root: info
    org: info
    com: info
    org.apache.dubbo: info
    com.dwei: debug

# 加密设置
jasypt:
  encryptor:
    bean: standardConfigEncryptor

# spring-boot-actuator 监控组件管理配置
management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: health,info

# MyBatis配置
mybatis:
  # 搜索指定包别名
  typeAliasesPackage: com.dwei.**.domain
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mapper/**/*Mapper.xml
  # 加载全局的配置文件
  configLocation: classpath:config/mybatis/mybatis-config.xml

# MyBatis plus配置
mybatis-plus:
  # 搜索指定包别名
  typeAliasesPackage: com.dwei.**.domain
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mapper/**/*Mapper.xml

# PageHelper分页插件
pagehelper:
  helperDialect: mysql
  supportMethodsArguments: true
  params: count=countSql

# Sa-Token
sa-token:
  # 自定义分组属性
  group: ${spring.application.name}
  # http header 中，从 Authorization 中获取 tokenValue
  token-name: auth_token
  # token 过期时间 30 天
  timeout: 2592000
  # 不过期
  active-timeout: -1
  # token风格 使用uuid风格, 只不过去掉了中划线
  token-style: simple-uuid
  # token 过期时间自动续期
  auto-renew: true
  # 是否允许同一账号并发登录 （为 true 时允许一起登录，为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # 不打印操作日志
  is-log: false
  # 初始化配置时不打印版本字符画
  isPrint: false
  # 是否从 cookie 中获取 tokenValue
  is-read-cookie: false
  # 是否从 body 中获取 tokenValue
  is-read-body: false